//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PH_Management.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class LoanAPPEntities : DbContext
    {
        public LoanAPPEntities()
            : base("name=LoanAPPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<vwGroup> vwGroups { get; set; }
    
        public virtual int prcAccounts(Nullable<long> accountsID, Nullable<long> accountsHeadID, string accountsDescription, Nullable<System.DateTime> accountsDate, Nullable<decimal> accountsAmount, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var accountsIDParameter = accountsID.HasValue ?
                new ObjectParameter("AccountsID", accountsID) :
                new ObjectParameter("AccountsID", typeof(long));
    
            var accountsHeadIDParameter = accountsHeadID.HasValue ?
                new ObjectParameter("AccountsHeadID", accountsHeadID) :
                new ObjectParameter("AccountsHeadID", typeof(long));
    
            var accountsDescriptionParameter = accountsDescription != null ?
                new ObjectParameter("AccountsDescription", accountsDescription) :
                new ObjectParameter("AccountsDescription", typeof(string));
    
            var accountsDateParameter = accountsDate.HasValue ?
                new ObjectParameter("AccountsDate", accountsDate) :
                new ObjectParameter("AccountsDate", typeof(System.DateTime));
    
            var accountsAmountParameter = accountsAmount.HasValue ?
                new ObjectParameter("AccountsAmount", accountsAmount) :
                new ObjectParameter("AccountsAmount", typeof(decimal));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcAccounts", accountsIDParameter, accountsHeadIDParameter, accountsDescriptionParameter, accountsDateParameter, accountsAmountParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcAccountsHead(Nullable<int> accountsHeadID, string accountsHead, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var accountsHeadIDParameter = accountsHeadID.HasValue ?
                new ObjectParameter("AccountsHeadID", accountsHeadID) :
                new ObjectParameter("AccountsHeadID", typeof(int));
    
            var accountsHeadParameter = accountsHead != null ?
                new ObjectParameter("AccountsHead", accountsHead) :
                new ObjectParameter("AccountsHead", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcAccountsHead", accountsHeadIDParameter, accountsHeadParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcBank(Nullable<int> bankID, string bankName, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(int));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcBank", bankIDParameter, bankNameParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcChangeAdminPass(string pass, ObjectParameter response)
        {
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcChangeAdminPass", passParameter, response);
        }
    
        public virtual int prcClearData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcClearData");
        }
    
        public virtual int prcCSR(Nullable<int> csrID, string name, Nullable<System.DateTime> dOJ, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var csrIDParameter = csrID.HasValue ?
                new ObjectParameter("CsrID", csrID) :
                new ObjectParameter("CsrID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOJParameter = dOJ.HasValue ?
                new ObjectParameter("DOJ", dOJ) :
                new ObjectParameter("DOJ", typeof(System.DateTime));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCSR", csrIDParameter, nameParameter, dOJParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcCustomer(Nullable<long> customerID, Nullable<System.DateTime> dOJ, Nullable<long> customerNo, string formNo, string firstName, string middleName, string lastName, string alliasName, Nullable<System.DateTime> dOB, string age, string religion, string caste, string gender, string maritalStatus, string ageProofCertificate, string ageProofCertificateNo, Nullable<int> documentTypeID, string documentNo, string fatherName, Nullable<int> qualificationID, Nullable<int> occupationID, string occupation, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var dOJParameter = dOJ.HasValue ?
                new ObjectParameter("DOJ", dOJ) :
                new ObjectParameter("DOJ", typeof(System.DateTime));
    
            var customerNoParameter = customerNo.HasValue ?
                new ObjectParameter("CustomerNo", customerNo) :
                new ObjectParameter("CustomerNo", typeof(long));
    
            var formNoParameter = formNo != null ?
                new ObjectParameter("FormNo", formNo) :
                new ObjectParameter("FormNo", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var alliasNameParameter = alliasName != null ?
                new ObjectParameter("AlliasName", alliasName) :
                new ObjectParameter("AlliasName", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var religionParameter = religion != null ?
                new ObjectParameter("Religion", religion) :
                new ObjectParameter("Religion", typeof(string));
    
            var casteParameter = caste != null ?
                new ObjectParameter("Caste", caste) :
                new ObjectParameter("Caste", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var maritalStatusParameter = maritalStatus != null ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(string));
    
            var ageProofCertificateParameter = ageProofCertificate != null ?
                new ObjectParameter("AgeProofCertificate", ageProofCertificate) :
                new ObjectParameter("AgeProofCertificate", typeof(string));
    
            var ageProofCertificateNoParameter = ageProofCertificateNo != null ?
                new ObjectParameter("AgeProofCertificateNo", ageProofCertificateNo) :
                new ObjectParameter("AgeProofCertificateNo", typeof(string));
    
            var documentTypeIDParameter = documentTypeID.HasValue ?
                new ObjectParameter("DocumentTypeID", documentTypeID) :
                new ObjectParameter("DocumentTypeID", typeof(int));
    
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var fatherNameParameter = fatherName != null ?
                new ObjectParameter("FatherName", fatherName) :
                new ObjectParameter("FatherName", typeof(string));
    
            var qualificationIDParameter = qualificationID.HasValue ?
                new ObjectParameter("QualificationID", qualificationID) :
                new ObjectParameter("QualificationID", typeof(int));
    
            var occupationIDParameter = occupationID.HasValue ?
                new ObjectParameter("OccupationID", occupationID) :
                new ObjectParameter("OccupationID", typeof(int));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCustomer", customerIDParameter, dOJParameter, customerNoParameter, formNoParameter, firstNameParameter, middleNameParameter, lastNameParameter, alliasNameParameter, dOBParameter, ageParameter, religionParameter, casteParameter, genderParameter, maritalStatusParameter, ageProofCertificateParameter, ageProofCertificateNoParameter, documentTypeIDParameter, documentNoParameter, fatherNameParameter, qualificationIDParameter, occupationIDParameter, occupationParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcCustomerBank(Nullable<long> customerID, string accountName, string accountNo, string bankName, string iFSC, Nullable<int> btnStatus)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var iFSCParameter = iFSC != null ?
                new ObjectParameter("IFSC", iFSC) :
                new ObjectParameter("IFSC", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCustomerBank", customerIDParameter, accountNameParameter, accountNoParameter, bankNameParameter, iFSCParameter, btnStatusParameter);
        }
    
        public virtual int prcCustomerCoBorrower(Nullable<long> customerID, string name, string relation, Nullable<System.DateTime> dOB, string age, Nullable<int> documentTypeID, string documentNo, Nullable<int> btnStatus)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var relationParameter = relation != null ?
                new ObjectParameter("Relation", relation) :
                new ObjectParameter("Relation", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var documentTypeIDParameter = documentTypeID.HasValue ?
                new ObjectParameter("DocumentTypeID", documentTypeID) :
                new ObjectParameter("DocumentTypeID", typeof(int));
    
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCustomerCoBorrower", customerIDParameter, nameParameter, relationParameter, dOBParameter, ageParameter, documentTypeIDParameter, documentNoParameter, btnStatusParameter);
        }
    
        public virtual int prcCustomerContact(Nullable<long> customerID, string presentAddress, string state, string district, string city, string pincode, string postOffice, string policeStation, string block, string wardNo, string permanentAddress, string mobileNo, string landLineNo, Nullable<int> btnStatus)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var presentAddressParameter = presentAddress != null ?
                new ObjectParameter("PresentAddress", presentAddress) :
                new ObjectParameter("PresentAddress", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var districtParameter = district != null ?
                new ObjectParameter("District", district) :
                new ObjectParameter("District", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var postOfficeParameter = postOffice != null ?
                new ObjectParameter("PostOffice", postOffice) :
                new ObjectParameter("PostOffice", typeof(string));
    
            var policeStationParameter = policeStation != null ?
                new ObjectParameter("PoliceStation", policeStation) :
                new ObjectParameter("PoliceStation", typeof(string));
    
            var blockParameter = block != null ?
                new ObjectParameter("Block", block) :
                new ObjectParameter("Block", typeof(string));
    
            var wardNoParameter = wardNo != null ?
                new ObjectParameter("WardNo", wardNo) :
                new ObjectParameter("WardNo", typeof(string));
    
            var permanentAddressParameter = permanentAddress != null ?
                new ObjectParameter("PermanentAddress", permanentAddress) :
                new ObjectParameter("PermanentAddress", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var landLineNoParameter = landLineNo != null ?
                new ObjectParameter("LandLineNo", landLineNo) :
                new ObjectParameter("LandLineNo", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCustomerContact", customerIDParameter, presentAddressParameter, stateParameter, districtParameter, cityParameter, pincodeParameter, postOfficeParameter, policeStationParameter, blockParameter, wardNoParameter, permanentAddressParameter, mobileNoParameter, landLineNoParameter, btnStatusParameter);
        }
    
        public virtual int prcCustomerGroup(Nullable<long> customerID, Nullable<long> groupID, Nullable<long> csrID, Nullable<int> btnStatus)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(long));
    
            var csrIDParameter = csrID.HasValue ?
                new ObjectParameter("CsrID", csrID) :
                new ObjectParameter("CsrID", typeof(long));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCustomerGroup", customerIDParameter, groupIDParameter, csrIDParameter, btnStatusParameter);
        }
    
        public virtual int prcCustomerHouse(Nullable<long> customerID, string houseType, string houseNo, string extent, string plotNo, string roomType, Nullable<int> rooms, string valuation, Nullable<int> familyMembers, string monthlyExpense, string yearlyFestiveExpense, Nullable<int> btnStatus)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var houseTypeParameter = houseType != null ?
                new ObjectParameter("HouseType", houseType) :
                new ObjectParameter("HouseType", typeof(string));
    
            var houseNoParameter = houseNo != null ?
                new ObjectParameter("HouseNo", houseNo) :
                new ObjectParameter("HouseNo", typeof(string));
    
            var extentParameter = extent != null ?
                new ObjectParameter("Extent", extent) :
                new ObjectParameter("Extent", typeof(string));
    
            var plotNoParameter = plotNo != null ?
                new ObjectParameter("PlotNo", plotNo) :
                new ObjectParameter("PlotNo", typeof(string));
    
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("RoomType", roomType) :
                new ObjectParameter("RoomType", typeof(string));
    
            var roomsParameter = rooms.HasValue ?
                new ObjectParameter("Rooms", rooms) :
                new ObjectParameter("Rooms", typeof(int));
    
            var valuationParameter = valuation != null ?
                new ObjectParameter("Valuation", valuation) :
                new ObjectParameter("Valuation", typeof(string));
    
            var familyMembersParameter = familyMembers.HasValue ?
                new ObjectParameter("FamilyMembers", familyMembers) :
                new ObjectParameter("FamilyMembers", typeof(int));
    
            var monthlyExpenseParameter = monthlyExpense != null ?
                new ObjectParameter("MonthlyExpense", monthlyExpense) :
                new ObjectParameter("MonthlyExpense", typeof(string));
    
            var yearlyFestiveExpenseParameter = yearlyFestiveExpense != null ?
                new ObjectParameter("YearlyFestiveExpense", yearlyFestiveExpense) :
                new ObjectParameter("YearlyFestiveExpense", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCustomerHouse", customerIDParameter, houseTypeParameter, houseNoParameter, extentParameter, plotNoParameter, roomTypeParameter, roomsParameter, valuationParameter, familyMembersParameter, monthlyExpenseParameter, yearlyFestiveExpenseParameter, btnStatusParameter);
        }
    
        public virtual int prcCustomerInsuredPerson(Nullable<long> customerID, string name, string relation, Nullable<System.DateTime> dOB, string age, Nullable<int> documentTypeID, string documentNo, Nullable<int> btnStatus)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var relationParameter = relation != null ?
                new ObjectParameter("Relation", relation) :
                new ObjectParameter("Relation", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var documentTypeIDParameter = documentTypeID.HasValue ?
                new ObjectParameter("DocumentTypeID", documentTypeID) :
                new ObjectParameter("DocumentTypeID", typeof(int));
    
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcCustomerInsuredPerson", customerIDParameter, nameParameter, relationParameter, dOBParameter, ageParameter, documentTypeIDParameter, documentNoParameter, btnStatusParameter);
        }
    
        public virtual int prcDocument(Nullable<int> documentID, string documentName, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var documentIDParameter = documentID.HasValue ?
                new ObjectParameter("DocumentID", documentID) :
                new ObjectParameter("DocumentID", typeof(int));
    
            var documentNameParameter = documentName != null ?
                new ObjectParameter("DocumentName", documentName) :
                new ObjectParameter("DocumentName", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcDocument", documentIDParameter, documentNameParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcExpense(Nullable<long> expenseID, Nullable<long> expenseHeadID, string expenseDescription, Nullable<System.DateTime> expenseDate, Nullable<decimal> expenseAmount, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var expenseIDParameter = expenseID.HasValue ?
                new ObjectParameter("ExpenseID", expenseID) :
                new ObjectParameter("ExpenseID", typeof(long));
    
            var expenseHeadIDParameter = expenseHeadID.HasValue ?
                new ObjectParameter("ExpenseHeadID", expenseHeadID) :
                new ObjectParameter("ExpenseHeadID", typeof(long));
    
            var expenseDescriptionParameter = expenseDescription != null ?
                new ObjectParameter("ExpenseDescription", expenseDescription) :
                new ObjectParameter("ExpenseDescription", typeof(string));
    
            var expenseDateParameter = expenseDate.HasValue ?
                new ObjectParameter("ExpenseDate", expenseDate) :
                new ObjectParameter("ExpenseDate", typeof(System.DateTime));
    
            var expenseAmountParameter = expenseAmount.HasValue ?
                new ObjectParameter("ExpenseAmount", expenseAmount) :
                new ObjectParameter("ExpenseAmount", typeof(decimal));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcExpense", expenseIDParameter, expenseHeadIDParameter, expenseDescriptionParameter, expenseDateParameter, expenseAmountParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcExpenseHead(Nullable<int> expenseHeadID, string expenseHead, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var expenseHeadIDParameter = expenseHeadID.HasValue ?
                new ObjectParameter("ExpenseHeadID", expenseHeadID) :
                new ObjectParameter("ExpenseHeadID", typeof(int));
    
            var expenseHeadParameter = expenseHead != null ?
                new ObjectParameter("ExpenseHead", expenseHead) :
                new ObjectParameter("ExpenseHead", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcExpenseHead", expenseHeadIDParameter, expenseHeadParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcGroup(Nullable<long> groupID, string groupName, Nullable<int> csrID, string regNo, string groupPrevNo, string villageWardNo, string landMark, string mobileNo, Nullable<System.DateTime> meetingDate, string meetingPlace, string unitNo, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(long));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var csrIDParameter = csrID.HasValue ?
                new ObjectParameter("CsrID", csrID) :
                new ObjectParameter("CsrID", typeof(int));
    
            var regNoParameter = regNo != null ?
                new ObjectParameter("RegNo", regNo) :
                new ObjectParameter("RegNo", typeof(string));
    
            var groupPrevNoParameter = groupPrevNo != null ?
                new ObjectParameter("GroupPrevNo", groupPrevNo) :
                new ObjectParameter("GroupPrevNo", typeof(string));
    
            var villageWardNoParameter = villageWardNo != null ?
                new ObjectParameter("VillageWardNo", villageWardNo) :
                new ObjectParameter("VillageWardNo", typeof(string));
    
            var landMarkParameter = landMark != null ?
                new ObjectParameter("LandMark", landMark) :
                new ObjectParameter("LandMark", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var meetingDateParameter = meetingDate.HasValue ?
                new ObjectParameter("MeetingDate", meetingDate) :
                new ObjectParameter("MeetingDate", typeof(System.DateTime));
    
            var meetingPlaceParameter = meetingPlace != null ?
                new ObjectParameter("MeetingPlace", meetingPlace) :
                new ObjectParameter("MeetingPlace", typeof(string));
    
            var unitNoParameter = unitNo != null ?
                new ObjectParameter("UnitNo", unitNo) :
                new ObjectParameter("UnitNo", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcGroup", groupIDParameter, groupNameParameter, csrIDParameter, regNoParameter, groupPrevNoParameter, villageWardNoParameter, landMarkParameter, mobileNoParameter, meetingDateParameter, meetingPlaceParameter, unitNoParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcLoan(Nullable<long> customerID, Nullable<long> groupID, Nullable<long> csrID, Nullable<int> unitNo, Nullable<System.DateTime> applyDate, Nullable<System.DateTime> sanctionDate, Nullable<int> productID, Nullable<int> loanPurposeTypeID, Nullable<int> loanFunderTypeID, Nullable<int> rateID, Nullable<decimal> rate, Nullable<int> weeks, Nullable<decimal> installment, Nullable<System.DateTime> startingDate, Nullable<int> paymentDuration, string paymentMode, string remarks, ObjectParameter errorResponse)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(long));
    
            var csrIDParameter = csrID.HasValue ?
                new ObjectParameter("CsrID", csrID) :
                new ObjectParameter("CsrID", typeof(long));
    
            var unitNoParameter = unitNo.HasValue ?
                new ObjectParameter("UnitNo", unitNo) :
                new ObjectParameter("UnitNo", typeof(int));
    
            var applyDateParameter = applyDate.HasValue ?
                new ObjectParameter("ApplyDate", applyDate) :
                new ObjectParameter("ApplyDate", typeof(System.DateTime));
    
            var sanctionDateParameter = sanctionDate.HasValue ?
                new ObjectParameter("SanctionDate", sanctionDate) :
                new ObjectParameter("SanctionDate", typeof(System.DateTime));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var loanPurposeTypeIDParameter = loanPurposeTypeID.HasValue ?
                new ObjectParameter("LoanPurposeTypeID", loanPurposeTypeID) :
                new ObjectParameter("LoanPurposeTypeID", typeof(int));
    
            var loanFunderTypeIDParameter = loanFunderTypeID.HasValue ?
                new ObjectParameter("LoanFunderTypeID", loanFunderTypeID) :
                new ObjectParameter("LoanFunderTypeID", typeof(int));
    
            var rateIDParameter = rateID.HasValue ?
                new ObjectParameter("RateID", rateID) :
                new ObjectParameter("RateID", typeof(int));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(decimal));
    
            var weeksParameter = weeks.HasValue ?
                new ObjectParameter("Weeks", weeks) :
                new ObjectParameter("Weeks", typeof(int));
    
            var installmentParameter = installment.HasValue ?
                new ObjectParameter("Installment", installment) :
                new ObjectParameter("Installment", typeof(decimal));
    
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var paymentDurationParameter = paymentDuration.HasValue ?
                new ObjectParameter("PaymentDuration", paymentDuration) :
                new ObjectParameter("PaymentDuration", typeof(int));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcLoan", customerIDParameter, groupIDParameter, csrIDParameter, unitNoParameter, applyDateParameter, sanctionDateParameter, productIDParameter, loanPurposeTypeIDParameter, loanFunderTypeIDParameter, rateIDParameter, rateParameter, weeksParameter, installmentParameter, startingDateParameter, paymentDurationParameter, paymentModeParameter, remarksParameter, errorResponse);
        }
    
        public virtual int prcLoanFunderType(Nullable<int> loanFunderTypeID, string loanFunderType, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var loanFunderTypeIDParameter = loanFunderTypeID.HasValue ?
                new ObjectParameter("LoanFunderTypeID", loanFunderTypeID) :
                new ObjectParameter("LoanFunderTypeID", typeof(int));
    
            var loanFunderTypeParameter = loanFunderType != null ?
                new ObjectParameter("LoanFunderType", loanFunderType) :
                new ObjectParameter("LoanFunderType", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcLoanFunderType", loanFunderTypeIDParameter, loanFunderTypeParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcLoanPurposeType(Nullable<int> loanPurposeTypeID, string loanPurposeType, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var loanPurposeTypeIDParameter = loanPurposeTypeID.HasValue ?
                new ObjectParameter("LoanPurposeTypeID", loanPurposeTypeID) :
                new ObjectParameter("LoanPurposeTypeID", typeof(int));
    
            var loanPurposeTypeParameter = loanPurposeType != null ?
                new ObjectParameter("LoanPurposeType", loanPurposeType) :
                new ObjectParameter("LoanPurposeType", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcLoanPurposeType", loanPurposeTypeIDParameter, loanPurposeTypeParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcMember(Nullable<long> memberID, Nullable<int> memberTypeID, Nullable<System.DateTime> dOJ, Nullable<long> membershipNo, string fullName, string fathersName, string motherMaidenName, string spouseName, Nullable<System.DateTime> dOB, string age, string gender, string maritalStatus, string bloodGroup, string aadharCardNo, string voterCardNo, string pAN, Nullable<int> occupationID, string occupation, string emailID, string contactNo, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(long));
    
            var memberTypeIDParameter = memberTypeID.HasValue ?
                new ObjectParameter("MemberTypeID", memberTypeID) :
                new ObjectParameter("MemberTypeID", typeof(int));
    
            var dOJParameter = dOJ.HasValue ?
                new ObjectParameter("DOJ", dOJ) :
                new ObjectParameter("DOJ", typeof(System.DateTime));
    
            var membershipNoParameter = membershipNo.HasValue ?
                new ObjectParameter("MembershipNo", membershipNo) :
                new ObjectParameter("MembershipNo", typeof(long));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var fathersNameParameter = fathersName != null ?
                new ObjectParameter("FathersName", fathersName) :
                new ObjectParameter("FathersName", typeof(string));
    
            var motherMaidenNameParameter = motherMaidenName != null ?
                new ObjectParameter("MotherMaidenName", motherMaidenName) :
                new ObjectParameter("MotherMaidenName", typeof(string));
    
            var spouseNameParameter = spouseName != null ?
                new ObjectParameter("SpouseName", spouseName) :
                new ObjectParameter("SpouseName", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var maritalStatusParameter = maritalStatus != null ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(string));
    
            var bloodGroupParameter = bloodGroup != null ?
                new ObjectParameter("BloodGroup", bloodGroup) :
                new ObjectParameter("BloodGroup", typeof(string));
    
            var aadharCardNoParameter = aadharCardNo != null ?
                new ObjectParameter("AadharCardNo", aadharCardNo) :
                new ObjectParameter("AadharCardNo", typeof(string));
    
            var voterCardNoParameter = voterCardNo != null ?
                new ObjectParameter("VoterCardNo", voterCardNo) :
                new ObjectParameter("VoterCardNo", typeof(string));
    
            var pANParameter = pAN != null ?
                new ObjectParameter("PAN", pAN) :
                new ObjectParameter("PAN", typeof(string));
    
            var occupationIDParameter = occupationID.HasValue ?
                new ObjectParameter("OccupationID", occupationID) :
                new ObjectParameter("OccupationID", typeof(int));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("Occupation", occupation) :
                new ObjectParameter("Occupation", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcMember", memberIDParameter, memberTypeIDParameter, dOJParameter, membershipNoParameter, fullNameParameter, fathersNameParameter, motherMaidenNameParameter, spouseNameParameter, dOBParameter, ageParameter, genderParameter, maritalStatusParameter, bloodGroupParameter, aadharCardNoParameter, voterCardNoParameter, pANParameter, occupationIDParameter, occupationParameter, emailIDParameter, contactNoParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcMemberBank(Nullable<long> memberID, string accountName, string accountNo, string bankName, string iFSC, Nullable<int> btnStatus)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(long));
    
            var accountNameParameter = accountName != null ?
                new ObjectParameter("AccountName", accountName) :
                new ObjectParameter("AccountName", typeof(string));
    
            var accountNoParameter = accountNo != null ?
                new ObjectParameter("AccountNo", accountNo) :
                new ObjectParameter("AccountNo", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var iFSCParameter = iFSC != null ?
                new ObjectParameter("IFSC", iFSC) :
                new ObjectParameter("IFSC", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcMemberBank", memberIDParameter, accountNameParameter, accountNoParameter, bankNameParameter, iFSCParameter, btnStatusParameter);
        }
    
        public virtual int prcMemberNominee(Nullable<long> memberID, string name, Nullable<System.DateTime> dOB, string age, string gender, Nullable<int> relationID, string aadharCardNo, string voterCardNo, string pAN, string rationCardNo, string drivingLicenceNo, string emailID, string contactNo, Nullable<int> btnStatus)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(long));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var relationIDParameter = relationID.HasValue ?
                new ObjectParameter("RelationID", relationID) :
                new ObjectParameter("RelationID", typeof(int));
    
            var aadharCardNoParameter = aadharCardNo != null ?
                new ObjectParameter("AadharCardNo", aadharCardNo) :
                new ObjectParameter("AadharCardNo", typeof(string));
    
            var voterCardNoParameter = voterCardNo != null ?
                new ObjectParameter("VoterCardNo", voterCardNo) :
                new ObjectParameter("VoterCardNo", typeof(string));
    
            var pANParameter = pAN != null ?
                new ObjectParameter("PAN", pAN) :
                new ObjectParameter("PAN", typeof(string));
    
            var rationCardNoParameter = rationCardNo != null ?
                new ObjectParameter("RationCardNo", rationCardNo) :
                new ObjectParameter("RationCardNo", typeof(string));
    
            var drivingLicenceNoParameter = drivingLicenceNo != null ?
                new ObjectParameter("DrivingLicenceNo", drivingLicenceNo) :
                new ObjectParameter("DrivingLicenceNo", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var contactNoParameter = contactNo != null ?
                new ObjectParameter("ContactNo", contactNo) :
                new ObjectParameter("ContactNo", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcMemberNominee", memberIDParameter, nameParameter, dOBParameter, ageParameter, genderParameter, relationIDParameter, aadharCardNoParameter, voterCardNoParameter, pANParameter, rationCardNoParameter, drivingLicenceNoParameter, emailIDParameter, contactNoParameter, btnStatusParameter);
        }
    
        public virtual int prcMemberTransaction(Nullable<long> slno, Nullable<long> memberID, Nullable<decimal> amount, string remarks, string paymentMode, Nullable<System.DateTime> transactionDate, Nullable<int> type, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var slnoParameter = slno.HasValue ?
                new ObjectParameter("Slno", slno) :
                new ObjectParameter("Slno", typeof(long));
    
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var paymentModeParameter = paymentMode != null ?
                new ObjectParameter("PaymentMode", paymentMode) :
                new ObjectParameter("PaymentMode", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcMemberTransaction", slnoParameter, memberIDParameter, amountParameter, remarksParameter, paymentModeParameter, transactionDateParameter, typeParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcProcessLoan(Nullable<long> loanID)
        {
            var loanIDParameter = loanID.HasValue ?
                new ObjectParameter("LoanID", loanID) :
                new ObjectParameter("LoanID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcProcessLoan", loanIDParameter);
        }
    
        public virtual int prcProduct(Nullable<int> productID, string productName, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcProduct", productIDParameter, productNameParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcQualification(Nullable<int> qualificationID, string qualification, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var qualificationIDParameter = qualificationID.HasValue ?
                new ObjectParameter("QualificationID", qualificationID) :
                new ObjectParameter("QualificationID", typeof(int));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("Qualification", qualification) :
                new ObjectParameter("Qualification", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcQualification", qualificationIDParameter, qualificationParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcRateOfInterest(Nullable<int> rateID, Nullable<int> weeks, Nullable<decimal> rateOfInterest, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var rateIDParameter = rateID.HasValue ?
                new ObjectParameter("RateID", rateID) :
                new ObjectParameter("RateID", typeof(int));
    
            var weeksParameter = weeks.HasValue ?
                new ObjectParameter("Weeks", weeks) :
                new ObjectParameter("Weeks", typeof(int));
    
            var rateOfInterestParameter = rateOfInterest.HasValue ?
                new ObjectParameter("RateOfInterest", rateOfInterest) :
                new ObjectParameter("RateOfInterest", typeof(decimal));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcRateOfInterest", rateIDParameter, weeksParameter, rateOfInterestParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual int prcRecoverLoan(Nullable<long> loanID, Nullable<System.DateTime> paidDate, Nullable<decimal> fineAmount, Nullable<int> noOfInstallment, Nullable<int> leftInstallment, ObjectParameter errorResponse)
        {
            var loanIDParameter = loanID.HasValue ?
                new ObjectParameter("LoanID", loanID) :
                new ObjectParameter("LoanID", typeof(long));
    
            var paidDateParameter = paidDate.HasValue ?
                new ObjectParameter("PaidDate", paidDate) :
                new ObjectParameter("PaidDate", typeof(System.DateTime));
    
            var fineAmountParameter = fineAmount.HasValue ?
                new ObjectParameter("FineAmount", fineAmount) :
                new ObjectParameter("FineAmount", typeof(decimal));
    
            var noOfInstallmentParameter = noOfInstallment.HasValue ?
                new ObjectParameter("NoOfInstallment", noOfInstallment) :
                new ObjectParameter("NoOfInstallment", typeof(int));
    
            var leftInstallmentParameter = leftInstallment.HasValue ?
                new ObjectParameter("LeftInstallment", leftInstallment) :
                new ObjectParameter("LeftInstallment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcRecoverLoan", loanIDParameter, paidDateParameter, fineAmountParameter, noOfInstallmentParameter, leftInstallmentParameter, errorResponse);
        }
    
        public virtual int prcRecoverMultipleLoan(Nullable<System.DateTime> paidDate, ObjectParameter errorResponse)
        {
            var paidDateParameter = paidDate.HasValue ?
                new ObjectParameter("PaidDate", paidDate) :
                new ObjectParameter("PaidDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcRecoverMultipleLoan", paidDateParameter, errorResponse);
        }
    
        public virtual int prcRelation(Nullable<int> relationID, string relationName, Nullable<int> btnStatus, ObjectParameter errorResponse)
        {
            var relationIDParameter = relationID.HasValue ?
                new ObjectParameter("RelationID", relationID) :
                new ObjectParameter("RelationID", typeof(int));
    
            var relationNameParameter = relationName != null ?
                new ObjectParameter("RelationName", relationName) :
                new ObjectParameter("RelationName", typeof(string));
    
            var btnStatusParameter = btnStatus.HasValue ?
                new ObjectParameter("BtnStatus", btnStatus) :
                new ObjectParameter("BtnStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("prcRelation", relationIDParameter, relationNameParameter, btnStatusParameter, errorResponse);
        }
    
        public virtual ObjectResult<prGetCustomertLis_Result> prGetCustomertLis(string type, string customerID, string formNo)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var formNoParameter = formNo != null ?
                new ObjectParameter("FormNo", formNo) :
                new ObjectParameter("FormNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prGetCustomertLis_Result>("prGetCustomertLis", typeParameter, customerIDParameter, formNoParameter);
        }
    
        public virtual ObjectResult<prGetEmployee_Result> prGetEmployee(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prGetEmployee_Result>("prGetEmployee", typeParameter);
        }
    
        public virtual ObjectResult<prGetGroupDetails_Result> prGetGroupDetails(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prGetGroupDetails_Result>("prGetGroupDetails", typeParameter);
        }
    }
}
